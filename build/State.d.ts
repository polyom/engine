import { Direction, Kicks, Matrix, Piece, Shape, Vector } from "./types";
import { Random } from "./Random";
export declare class State {
    width: number;
    height: number;
    pieces: Piece[];
    spawns: Vector[];
    random: Random;
    minQueue: number;
    maxStalls: number;
    x: number;
    y: number;
    angle: number;
    current: number;
    held: number;
    board: Matrix;
    queue: number[];
    canHold: boolean;
    stalls: number;
    constructor(width: number, height: number, pieces: Piece[], spawns: Vector[], random: Random, minQueue?: number, maxStalls?: number);
    isFloating(y?: number): boolean;
    getGhostY(): number;
    getPiece(id?: number): Piece;
    getShape(id?: number, angle?: number): Shape;
    getKicks(direction: Direction, id?: number, angle?: number): Kicks;
    stall(): void;
    rotate(direction: Direction): boolean;
    shift(dx: number, dy: number): boolean;
    slide(dx: number): boolean;
    print(x: number, y: number, id: number): boolean;
    lock(): number[];
    drop(): boolean;
    swap(): number;
    hold(): boolean;
    push(id: number): void;
    spawn(): boolean;
    summon(id: number): boolean;
    move(x: number, y: number, angle: number): boolean;
    set(x: number, y: number, angle: number, id: number): boolean;
    clear(): number[];
}
